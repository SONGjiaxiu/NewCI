def cal_kendall_tau(list_1 , list_2):
    length = len(list_1)
    if length != len(list_2):
        return -1
    set_1 = set()
    set_2 = set()
    for i in range(length):
        for j in range(i+1,length):
            set_1.add( (list_1[i],list_1[j]) )
            set_2.add( (list_2[i],list_2[j]) )
    count = len(set_1 & set_2)
    return float(count)*2 / ((length-1)*length)
    '''
    k_avg_list = ['i', 'k', 'a', 'j', 'g', 'l', 'c', 'f', 'b', 'e', 'h', 'd']
    c_list = ['a', 'i', 'f', 'b', 'k', 'j', 'e', 'h', 'c', 'g', 'l', 'd']
    r_list = ['l', 'b', 'j', 'f', 'e', 'd', 'c', 'a', 'h', 'i', 'k', 'g']
    h_list = ['a', 'i', 'k', 'e', 'd', 'h', 'f', 'c', 'b', 'g', 'j', 'l']
    s_list = ['k', 'i', 'a', 'j', 'e', 'c', 'd', 'f', 'h', 'l', 'g', 'b']
    m_list = ['b', 'f', 'a', 'g', 'j', 'h', 'l', 'c', 'd', 'e', 'i', 'k']
    I_list = ['l', 'b', 'f', 'h', 'e', 'j', 'd', 'c', 'a', 'i', 'g', 'k']

    print 'sim of k_avg_list&I_list : %s' % cal_kendall_tau(I_list,k_avg_list)
    print 'sim of c_list&I_list : %s' % cal_kendall_tau(I_list,c_list)
    print 'sim of r_list&I_list : %s' % cal_kendall_tau(I_list,r_list)
    print 'sim of h_list&I_list : %s' % cal_kendall_tau(I_list,h_list)
    print 'sim of s_list&I_list : %s' % cal_kendall_tau(I_list,s_list)
    print 'sim of m_list&I_list : %s' % cal_kendall_tau(I_list,m_list)
    '''




#*************************************************************************
if __name__ == '__main__':
    '''
    G = nx.Graph()
    G.add_edges_from([('1', '3'), ('1', '4'), ('2', '3'), ('2', '4'), ('2', '5'), ('3', '4'),  ('3', '6'), ('4', '5'), ('4', '6'),
        ('5', '22'), ('22', '7'), ('6', '23'), ('23', '14'),
        ('7', '8'), ('7', '9'), ('7', '10'), ('8', '9'), ('9', '10'), ('9', '11'),('9', '13'), ('10', '12'), ('10', '13'), ('11', '12'),
        ('11', '13'),
        ('14', '16'), ('14', '17'), ('15', '19'), ('15', '20'), ('16', '17'), ('16', '18'), ('16', '19'), ('17', '18'), ('17', '19'),
        ('17', '20'), ('18', '19'), ('19', '20'),
        ('8', '21'), ('21', '15'), ('1', '24'), ('20', '25')])
    '''
    k_avg_list = ['i', 'k', 'a', 'j', 'g', 'l', 'c', 'f', 'b', 'e', 'h', 'd']
    c_list = ['a', 'i', 'f', 'b', 'k', 'j', 'e', 'h', 'c', 'g', 'l', 'd']
    r_list = ['l', 'b', 'j', 'f', 'e', 'd', 'c', 'a', 'h', 'i', 'k', 'g']
    h_list = ['a', 'i', 'k', 'e', 'd', 'h', 'f', 'c', 'b', 'g', 'j', 'l']
    s_list = ['k', 'i', 'a', 'j', 'e', 'c', 'd', 'f', 'h', 'l', 'g', 'b']
    m_list = ['b', 'f', 'a', 'g', 'j', 'h', 'l', 'c', 'd', 'e', 'i', 'k']
    I_list = ['l', 'b', 'f', 'h', 'e', 'j', 'd', 'c', 'a', 'i', 'g', 'k']
    l1=[1,2,3,4,5,6,7,8,9,10]
    l2=[1,2,3,4,5,6,7,8,10,9] 
    l3=['34', '1', '33', '3', '2', '32', '28', '14', '4', '9', '20', '29', '31', '10', '25', '24', '26', '7', '6', '8', '30', '5', '11', '21', '23', '15', '16', '19', '22', '18', '13', '27', '17', '12']
    l4=['34', '1', '33', '3', '2', '32', '28', '14', '4', '9', '20', '29', '31', '10', '25', '24', '26', '7', '6', '8', '30', '5', '11', '21', '23', '15', '16', '19', '22', '18', '13', '27', '17', '12']
    l5=[296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 281, 280, 278, 274, 261, 260, 259, 258, 251, 248, 247, 282,283, 243, 242, 230, 257, 229, 228, 239, 252, 250, 226, 237, 279, 220, 246, 217, 255, 277, 272, 270, 273, 271, 276, 275, 269,234, 231, 268, 249, 150, 147, 146, 143, 244, 245, 238, 144, 134, 219, 127, 267, 266, 265, 264, 263, 262, 254, 256, 253, 200,203, 121, 205, 148, 123, 199, 194, 192, 128, 126, 133, 140, 149, 223, 233, 139, 111, 110, 222, 201, 136, 135, 100, 107, 145,206, 202, 221, 227, 97, 96, 241, 204, 207, 198, 240, 104, 141, 216, 109, 191, 211, 188, 187, 212, 224, 83, 215, 225, 101, 65, 63, 62, 91, 105, 82, 69, 87, 95, 61, 60, 57, 56, 54, 78, 90, 99, 79, 137, 232, 42, 40, 93, 112, 68, 81, 66, 45, 58, 52, 122, 39, 38, 37, 33, 32, 31, 30, 29, 28, 64, 49, 190, 55, 85, 106, 89, 210, 132, 80, 70, 76, 51, 71, 44, 53, 41, 120, 98, 119, 116, 92, 113, 26, 22, 21, 20, 19, 18, 17, 15, 114, 209, 171, 170, 16, 142, 124, 138, 208, 24, 218, 236, 36, 214, 103, 193, 213, 235, 108, 102, 59, 75, 77, 73, 25, 94, 88, 46, 43, 48, 47, 35, 23, 34, 50, 27, 14, 13, 11, 174, 172, 189, 197, 196, 195, 117, 183, 182, 181, 180, 179, 178, 177, 176, 175, 186, 173, 125, 185, 184, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 118, 86, 158, 157, 156, 155, 154, 153, 152, 151, 67, 74, 72, 131, 130, 129, 84, 12, 115, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
    l6=[296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 281, 280, 278, 274, 261, 260, 259, 258, 251, 248, 247, 282, 283, 243, 242, 230, 257, 229, 228, 239, 252, 250, 226, 237, 279, 220, 246, 217, 255, 277, 272, 270, 273, 271, 276, 275, 269, 234, 231, 268, 249, 150, 147, 146, 143, 244, 245, 238, 144, 134, 219, 127, 267, 266, 265, 264, 263, 262, 254, 256, 253, 200, 203, 121, 205, 148, 123, 199, 194, 192, 128, 126, 133, 140, 149, 223, 233, 139, 111, 110, 222, 201, 136, 135, 100, 107, 145, 206, 202, 221, 227, 97, 96, 241, 204, 207, 198, 240, 104, 141, 216, 109, 191, 211, 188, 187, 212, 224, 83, 215, 225, 101, 65, 63, 62, 91, 105, 82, 69, 87, 95, 61, 60, 57, 56, 54, 78, 90, 99, 79, 137, 232, 42, 40, 93, 112, 68, 81, 66, 45, 58, 52, 122, 39, 38, 37, 33, 32, 31, 30, 29, 28, 64, 49, 190, 55, 85, 106, 89, 210, 132, 80, 70, 76, 51, 71, 44, 53, 41, 120, 98, 119, 116, 92, 113, 26, 22, 21, 20, 19, 18, 17, 15, 114, 209, 171, 170, 16, 142, 124, 138, 208, 24, 218, 236, 36, 214, 103, 193, 213, 235, 108, 102, 59, 75, 77, 73, 25, 94, 88, 46, 43, 48, 47, 35, 23, 34, 50, 27, 14, 13, 11, 174, 172, 189, 197, 196, 195, 117, 183, 182, 181, 180, 179, 178, 177, 176, 175, 186, 173, 125, 185, 184, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 118, 86, 158, 157, 156, 155, 154, 153, 152, 151, 67, 74, 72, 131, 130, 129, 84, 12, 115, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
    print cal_kendall_tau(l5,l6)
    print 'sim of k_avg_list&I_list : %s' % cal_kendall_tau(I_list,k_avg_list)
    print 'sim of c_list&I_list : %s' % cal_kendall_tau(I_list,c_list)
    print 'sim of r_list&I_list : %s' % cal_kendall_tau(I_list,r_list)
    print 'sim of h_list&I_list : %s' % cal_kendall_tau(I_list,h_list)
    print 'sim of s_list&I_list : %s' % cal_kendall_tau(I_list,s_list)
    print 'sim of m_list&I_list : %s' % cal_kendall_tau(I_list,m_list)